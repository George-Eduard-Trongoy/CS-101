celebrities <- data.frame(
Power_Ranking = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25),
Celebrity_Name = c("Tom Cruise", "Rolling Stones", "Oprah Winfrey", "U2", "Tiger Woods", "Steven Spielberg",  "Howard Stern", "50 Cent", "Cast of the Sopranos", "Dan Brown", "Bruce Springsteen",  "Donald Trump", "Muhammad Ali", "Paul McCartney", "George Lucas", "Elton John",
"David Letterman", "Phil Mickelson", "J.K Rowling", "Bradd Pitt", "Peter Jackson",
"Dr. Phil McGraw", "Jay Lenon", "Celine Dion", "Kobe Bryant"),
Pay = c(67, 90, 225, 110, 90, 332, 302, 41, 52, 88, 55, 44, 55, 40, 233, 34, 40, 47, 75, 39, 45, 32, 30, 33, 31)
)
celebrities <- data.frame(
Power_Ranking = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25),
Celebrity_Name = c("Tom Cruise", "Rolling Stones", "Oprah Winfrey", "U2", "Tiger Woods", "Steven Spielberg",  "Howard Stern", "50 Cent", "Cast of the Sopranos", "Dan Brown", "Bruce Springsteen",  "Donald Trump", "Muhammad Ali", "Paul McCartney", "George Lucas", "Elton John",
"David Letterman", "Phil Mickelson", "J.K Rowling", "Bradd Pitt", "Peter Jackson",
"Dr. Phil McGraw", "Jay Lenon", "Celine Dion", "Kobe Bryant"),
Pay = c(67, 90, 225, 110, 90, 332, 302, 41, 52, 88, 55, 44, 55, 40, 233, 34, 40, 47, 75, 39, 45, 32, 30, 33, 31)
)
celebrities
celebrities[celebrities$Celebrity_Name == "J.K Rowling", c("Power_Ranking", "Pay")] <- c(15, 90)
celebrities[celebrities$Celebrity_Name == "J.K Rowling", c("Power_Ranking", "Pay")] <- c(15, 90)
celebrities
setwd(C:\RPrograms\Worksheet-2)
setwd(RPrograms\Worksheet-2)
setwd("C:/RPrograms/Worksheet-2")
power_ranking <- read.csv("Power-Ranking.csv")
power_ranking
rank_data <- read.csv("Power-Ranking.csv")
rank_data
ranks_subset <-rank_data[10:20, ]
save(ranks_subset, file = "Ranks.RData")
x  <- -5:5
x
rank_data <- read.csv("Power-Ranking.csv")
rank_data
ranks_subset <-rank_data[10:20, ]
save(ranks_subset, file = "Ranks.RData")
library(openxlsx)
hotels_data <- read.xlsx("hotels-Vienna.xlsx")
hotels_data
dim(hotels_data)
selected_data <- hotels_data[, c("country", "neighbourhood", "price", "stars", "accommodation_type", "rating")]
selected_data
save(selected_data, file = "new.RData")
load("new.RData")
head(selected_data)
tail(selected_data)
vegetables <- c("Tomato", "Cucumber", "Carrot", "Potato", "Spinach", "Broccoli", "Pepper", "Lettuce", "Cabbage", "Onion")
vegetables
vegetables <- c(vegetables, "Zucchini", "Eggplant")
vegetables
vegetables <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
vegetables
vegetables <- vegetables[-c(5, 10, 15)]
vegetables
save(selected_data, file = "new.RData")
load("new.RData")
head(selected_data)
tail(selected_data)
vegetables <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
vegetables
count(vegetables)
vegetables <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
vegetables
vcount <- count(vegetables)
vegetables <- vegetables[-c(5, 10, 15)]
vegetables
length(vegetables)
vegetables <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
vegetables
length(vegetables)
vegetables <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
vegetables
length(vegetables)
newveg <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
newveg
length(vegetables)
vegetables <- vegetables[-c(5, 10, 15)]
vegetables
newveg <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
newveg
length(vegetables)
newveg <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
newveg
length(vegetables)
newveg <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
newveg
length(newveg)
newveg <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
newveg
length(newveg)
newveg <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
newveg
length(newveg)
vegetables <- c("Tomato", "Cucumber", "Carrot", "Potato", "Spinach", "Broccoli", "Pepper", "Lettuce", "Cabbage", "Onion")
vegetables
length(vegetables)
vegetables <- c(vegetables, "Zucchini", "Eggplant")
vegetables
length(vegetables)
newveg <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
newveg
length(newveg)
newveg <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
newveg
length(newveg)
newveg <- vegetables[-c(5, 10, 15)]
newveg
newrveg <- newveg[-c(5, 10, 15)]
newrveg
newveg <- append(vegetables, c("Beetroot", "Garlic", "Peas", "Pumpkin"), after=5)
newveg
length(newveg)
newrveg <- newveg[-c(5, 10, 15)]
newrveg
lenghth(newrveg)
newrveg <- newveg[-c(5, 10, 15)]
newrveg
length(newrveg)
data <- c(length(rivers), sum(rivers), mean(rivers), median(rivers), var(rivers), sd(rivers), min(rivers), max(rivers))
data
rivdata <- c(length(rivers), sum(rivers), mean(rivers), median(rivers), var(rivers), sd(rivers), min(rivers), max(rivers))
rivdata
rivers
getwd()
setwd("C:\RPrograms\Worksheet-2")
setwd("C: /Rprograms/Worksheet-2")
install.packages("openxlsx")
selected_data <- hotels_data[, c("country", "neighbourhood", "price", "stars", "accommodation_type", "rating")]
selected_data
library(openxlsx)
hotels_data <- read.xlsx("hotels-Vienna.xlsx")
hotels_data
dim(hotels_data)
selected_data <- hotels_data[, c("country", "neighbourhood", "price", "stars", "accommodation_type", "rating")]
selected_data
save(selected_data, file = "new.RData")
load("new.RData")
head(selected_data)
tail(selected_data)
celeb <- data.frame(
Power_Ranking = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25),
Celebrity_Name = c("Tom Cruise", "Rolling Stones", "Oprah Winfrey", "U2", "Tiger Woods", "Steven Spielberg",  "Howard Stern", "50 Cent", "Cast of the Sopranos", "Dan Brown", "Bruce Springsteen",  "Donald Trump", "Muhammad Ali", "Paul McCartney", "George Lucas", "Elton John",
"David Letterman", "Phil Mickelson", "J.K Rowling", "Bradd Pitt", "Peter Jackson","Dr. Phil McGraw", "Jay Lenon", "Celine Dion", "Kobe Bryant"),
Pay = c(67, 90, 225, 110, 90, 332, 302, 41, 52, 88, 55, 44, 55, 40, 233, 34, 40, 47, 75, 39, 45, 32, 30, 33, 31)
)
celeb
celeb[celeb$Celebrity_Name == "J.K Rowling", c("Power_Ranking", "Pay")] <- c(15, 90)
celeb
rank_data <- read.csv("Power-Ranking.csv")
rank_data
ranks_subset <-rank_data[10:20, ]
save(ranks_subset, file = "Ranks.RData")
library(openxlsx)
hotels_data <- read.xlsx("hotels-Vienna.xlsx")
hotels_data
celeb <- data.frame(
Power_Ranking = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25),
Celebrity_Name = c("Tom Cruise", "Rolling Stones", "Oprah Winfrey", "U2", "Tiger Woods", "Steven Spielberg",  "Howard Stern", "50 Cent", "Cast of the Sopranos", "Dan Brown", "Bruce Springsteen",  "Donald Trump", "Muhammad Ali", "Paul McCartney", "George Lucas", "Elton John",
"David Letterman", "Phil Mickelson", "J.K Rowling", "Bradd Pitt", "Peter Jackson","Dr. Phil McGraw", "Jay Lenon", "Celine Dion", "Kobe Bryant"),
Pay = c(67, 90, 225, 110, 90, 332, 302, 41, 52, 88, 55, 44, 55, 40, 233, 34, 40, 47, 75, 39, 45, 32, 30, 33, 31)
)
celeb
rivers
cats
cars
human
happy
hello
w
aws
knitr::opts_chunk$set(echo = TRUE)
price <- readline(prompt("Enter price: "))
price <- readline(prompt="Enter price: ")
VAT <- price*.12
price <- readline(prompt="Enter price: ")
VAT <- price*0.12
price <- readline(prompt="Enter price: ")
VAT <- price*0.12
price <- readline(prompt="Enter price: ")
VAT <- price(0.12)
price <- readline(prompt="Enter price: ")
VAT <- pric*0.12
price <- readline(prompt="Enter price: ")
VAT <- price*0.12
price <- readline
percent <- 0.12
VAT <- price*percent
price <- readline(prompt="Enter price: ")
percent<- 0.12
VAT <- price*percent
price <- readline(prompt="Enter price: ")
as.numeric(percent<- 0.12)
VAT <- price*percent
as.numeric(price <- readline(prompt="Enter price: "))
as.numeric(percent<- 0.12)
VAT <- price*percent
as.numeric(price <- readline(prompt="Enter price: "))
as.numeric(percent<- 0.12)
as.numeric(VAT <- price*percent)
# Define the price
price <- 100  # Example price
# Add 12% VAT
price_with_vat <- price * 1.12
# Print the result
print(price_with_vat)
price <- readline(prompt = "Enter price: ")
# Add 12% VAT
price_with_vat <- price * 1.12
# Prompt the user to enter a price
price <- as.numeric(readline(prompt = "Enter the price: "))
# Add 12% VAT
price_with_vat <- price * 1.12
# Print the result
cat("The price with 12% VAT added is:", price_with_vat, "\n")
# Prompt the user to enter a price
price <- as.numeric(readline(prompt = "Enter the price: "))
# Add 12% VAT
price_with_vat <- price * 1.12
# Print the result
print("The price with 12% VAT added is:", price_with_vat, "\n")
# Prompt the user to enter a price
price <- as.numeric(readline(prompt = "Enter the price: "))
# Add 12% VAT
price_with_vat <- price * 1.12
# Print the result
catt("The price with 12% VAT added is:", price_with_vat, "\n")
# Prompt the user to enter a price
price <- as.numeric(readline(prompt = "Enter the price: "))
# Add 12% VAT
price_with_vat <- price * 1.12
# Print the result
cat("The price with 12% VAT added is:", price_with_vat, "\n")
knitr::opts_chunk$set(echo = TRUE)
exhaustive_search <- function() {
selected_number <- as.numeric(readline(prompt = "Select a number from 1 to 50: "))
if (selected_number < 1 || selected_number > 50) {
cat("The number selected is beyond the range of 1 to 50\n")
} else {
if (selected_number == 20) {
cat("TRUE\n")
} else {
cat("The selected number is:", selected_number, "\n")
}
}
}
exhaustive_search()
chosen_number <- as.numeric(readline(prompt = "Select a number from 1 to 50: "))
if (is.na(chosen_number) || chosen_number < 1 || chosen_number > 50) {
cat("The number selected is beyond the range of 1 to 50\n")
} else if (chosen_number == 20) {
cat("TRUE\n")
} else {
cat("The selected number is:", chosen_number, "\n")
}
chosen_number <- as.numeric(readline(prompt = "Select a number from 1 to 50: "))
if (is.na(chosen_number) || chosen_number < 1 || chosen_number > 50) {
cat("The number selected is beyond the range of 1 to 50\n")
} else if (chosen_number == 20) {
cat("TRUE\n")
} else {
cat("The selected number is:", chosen_number, "\n")
}
chosen_number <- as.numeric(readline(prompt = "Select a number from 1 to 50: "))
if (chosen_number) || chosen_number < 1 || chosen_number > 50 {
chosen_number <- as.numeric(readline(prompt = "Select a number from 1 to 50: "))
if (is.na(chosen_number) || chosen_number < 1 || chosen_number > 50) {
cat("The number selected is beyond the range of 1 to 50\n")
} else if (chosen_number == 20) {
cat("TRUE\n")
} else {
cat("The selected number is:", chosen_number, "\n")
}
cat("The number selected is beyond the range of 1 to 50\n")
chosen_number <- as.numeric(readline(prompt = "Select a number from 1 to 50: "))
if (is.na(chosen_number) || chosen_number < 1 || chosen_number > 50) {
cat("The number selected is beyond the range of 1 to 50\n")
} else if (chosen_number == 20) {
cat("TRUE\n")
} else {
cat("The selected number is:", chosen_number, "\n")
}
chosen_number <- as.numeric(readline(prompt = "Select a number from 1 to 50: "))
if (is.na(chosen_number) || chosen_number < 1 || chosen_number > 50) {
cat("The number selected is beyond the range of 1 to 50\n")
} else if (chosen_number == 20) {
cat("TRUE\n")
} else {
cat("The selected number is:", chosen_number, "\n")
}
minimum_bills <- function(price)
bills <- c(1000, 500, 200, 100, 50)
bill_count <- 0
for (bill in bills) {
count <- price %/% bill
bill_count <- bill_count + count
price <- price %% bill
}
minimum_bills <- function(price) {
# Define the available bills in descending order
bills <- c(1000, 500, 200, 100, 50)
bill_count <- sum(price %/% bills)
cat("Minimum number of bills needed:", bill_count, "\n")
}
minimum_bills(1350)
price <- as.numeric(readline(prompt = "Enter the price of the snack (must be divisible by 50): "))
if (price %% 50 != 0) {
cat("Error: The price must be divisible by 50.\n")
} else {
bills <- c(1000, 500, 200, 100, 50)
bill_count <- 0
for (bill in bills) {
bill_count <- bill_count + (price %/% bill)
price <- price %% bill
}
cat("Minimum number of bills needed:", bill_count, "\n")
}
minimum_bills <- function(price) {
bills <- c(1000, 500, 200, 100, 50)
count <- 0
for (bill in bills) {
num_bills <- price %/% bill
count <- count + num_bills
price <- price %% bill
}
return(count)
}
price <- as.numeric(readline(prompt = "Enter the price of the snack (divisible by 50): "))
cat("Minimum number of bills needed:", minimum_bills(price), "\n")
minimum_bills <- function(price) {
bills <- c(1000, 500, 200, 100, 50)
count <- 0
for (bill in bills) {
num_bills <- price %/% bill
count <- count + num_bills
price <- price %% bill
}
return(count)
}
repeat {
price <- as.numeric(readline(prompt = "Enter the price of the snack (divisible by 50): "))
if (!is.na(price) && price > 0 && price %% 50 == 0) {
break
} else {
cat("Invalid input. Please enter a positive number divisible by 50.\n")
}
}
